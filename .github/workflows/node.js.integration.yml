# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Integration (Test Deploy)
on: 
  push: 
    paths:
      - '**.ts'
      - 'package.json'
      - '**.js'

jobs:
  testdeploy:
    runs-on: ubuntu-latest
    if: ${{!contains(github.event.head_commit.message, 'skip ci') && !contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.author.name, 'Version Bump')}}
#    needs: build
    strategy:
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install node_modules
      run: npm i
    - name: Lint js/ts
      run: npm run lint --if-present
    - name: Build Rollup
      run: npm run build --if-present
    - name: Publish to testing guild
      run: npm run publish --if-present
      env:
        TEST_GUILD: ${{secrets.PYLON_API_DEPLOYMENTS_TEST_DEPLOY}}
        API_TOKEN: ${{secrets.PYLON_API_KEY}}
        MASTER_WEBHOOK: ${{secrets.MASTER_WEBHOOK}}
        USERS_WEBHOOK: ${{secrets.USERS_WEBHOOK}}
        PROXY_API_URL: ${{secrets.PROXY_API_URL}}
        PROXY_API_KEY: ${{secrets.PROXY_API_KEY}}
        PROXY_API_BOT_TOKEN: ${{secrets.PROXY_API_BOT_TOKEN}}
        CONTROL_USERS_ROLE: ${{secrets.CONTROL_USERS_ROLE}}
        GITHUB: true
    - name: Upload bundle
      uses: actions/upload-artifact@v2
      with:
        name: bundle.js
        path: dist/bundle.js
